// Generated by view binder compiler. Do not edit!
package com.example.mymusicproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mymusicproject.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardAdminBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton addPdfFab;

  @NonNull
  public final Button mBtnAddCategory;

  @NonNull
  public final ImageButton mBtnLogout;

  @NonNull
  public final TextView mEdtAdmin;

  @NonNull
  public final TextView mEdtEm;

  @NonNull
  public final ListView mEdtList;

  @NonNull
  public final EditText mEdtSearch;

  private ActivityDashboardAdminBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton addPdfFab, @NonNull Button mBtnAddCategory,
      @NonNull ImageButton mBtnLogout, @NonNull TextView mEdtAdmin, @NonNull TextView mEdtEm,
      @NonNull ListView mEdtList, @NonNull EditText mEdtSearch) {
    this.rootView = rootView;
    this.addPdfFab = addPdfFab;
    this.mBtnAddCategory = mBtnAddCategory;
    this.mBtnLogout = mBtnLogout;
    this.mEdtAdmin = mEdtAdmin;
    this.mEdtEm = mEdtEm;
    this.mEdtList = mEdtList;
    this.mEdtSearch = mEdtSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addPdfFab;
      FloatingActionButton addPdfFab = ViewBindings.findChildViewById(rootView, id);
      if (addPdfFab == null) {
        break missingId;
      }

      id = R.id.mBtnAddCategory;
      Button mBtnAddCategory = ViewBindings.findChildViewById(rootView, id);
      if (mBtnAddCategory == null) {
        break missingId;
      }

      id = R.id.mBtnLogout;
      ImageButton mBtnLogout = ViewBindings.findChildViewById(rootView, id);
      if (mBtnLogout == null) {
        break missingId;
      }

      id = R.id.mEdtAdmin;
      TextView mEdtAdmin = ViewBindings.findChildViewById(rootView, id);
      if (mEdtAdmin == null) {
        break missingId;
      }

      id = R.id.mEdtEm;
      TextView mEdtEm = ViewBindings.findChildViewById(rootView, id);
      if (mEdtEm == null) {
        break missingId;
      }

      id = R.id.mEdtList;
      ListView mEdtList = ViewBindings.findChildViewById(rootView, id);
      if (mEdtList == null) {
        break missingId;
      }

      id = R.id.mEdtSearch;
      EditText mEdtSearch = ViewBindings.findChildViewById(rootView, id);
      if (mEdtSearch == null) {
        break missingId;
      }

      return new ActivityDashboardAdminBinding((ConstraintLayout) rootView, addPdfFab,
          mBtnAddCategory, mBtnLogout, mEdtAdmin, mEdtEm, mEdtList, mEdtSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
